// #include <rcl/rcl.h>
// #include <rclc/rclc.h>
// #include <rclc/executor.h>
// #include <std_msgs/msg/string.h>


// #define RCCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){error_loop();}}
// #define RCSOFTCHECK(fn) { rcl_ret_t temp_rc = fn; if((temp_rc != RCL_RET_OK)){}}

// extern rcl_publisher_t publisherDebug;
// extern std_msgs__msg__String stringMsg;

// void initDebugPublisher(rcl_node_t *node)
// {
//     rcl_publisher_options_t publisher_ops = rcl_publisher_get_default_options();
//     rcl_publisher_init(&publisherDebug, node, ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, String), "/debug", &publisher_ops);
// }

// // Publish debug message and take string as a parameter
// const void publishDebugMessage(const char* message) {
//   stringMsg.data.data = (char*)message;
//   stringMsg.data.size = strlen(message);
//   RCSOFTCHECK(rcl_publish(&publisherDebug, &stringMsg, NULL));
// }
